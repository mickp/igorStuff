#pragma rtGlobals=1		// Use modern global access method.//	This panel enables ramping of the set point during an image.//	It works for Contact mode, AC mode and PFM mode.//	It isn't designed to work with FM mode.//	The increment may not start until a few lines into an image, so changes are logged//	in the 'Log' section of the wave note.Static StrConstant pkgdir = "root:packages:MAP"Static StrConstant MAPVW = "root:packages:MFP3D:Main:Variables:MAPVariablesWave"Static StrConstant MAPDW = "root:packages:MFP3D:Main:Variables:MAPVariablesDescription"Static Constant kTimer = 0	//	Which timer //	Ensure there's a menu entry for MAPVariablesWaveMenu "P&rogramming"	SubMenu "Global Variables"		"MAP",/Q, MakeVariableTable("MAP")	EndEnd			//	Override this function to prevent complaints if MAP_Utils is loaded.Override Function MAPSetVarFunc(ctrlName,varNum,varStr,varName) : SetVariableControl	String ctrlName	Variable varNum	String varStr			//this contains any letters as clues for range changes	String varName		if (Strlen(varStr))		//this is for any old panels that are still calling this function directly		//they should be calling FMapSetVarFunc now, so deal with clickvars better		//but this code should deal with click vars most of the time.		//see comments in UnitsCalcFunc for details.		//  The problem with FMapSetVarFunc is that it throws an error dialog for parameters it doesn't		//  find in a case structure, even if it the parameter exists and is otherwise handled correctly.		String ParmName = UnitsCalcFunc(ctrlName,varNum,varStr,varName)		PV(ParmName,varNum)		UpdateUnits(ParmName, varNum)		NewUpdateFormat(ParmName)	endifEndFunction MAPEnableSetPointIncrement(ctrlName, checked) : CheckBoxControl	String ctrlName	Variable checked	String checkBoxList = "ARUserCallbackMasterCheck_1;ARUserCallbackImageGoCheck_1;ARUserCallbackImageScanCheck_1;ARUserCallbackImageDoneCheck_1"		Variable i	For ( i = 0; i < ItemsInList(checkBoxList, ";"); i += 1)		ARCheckFunc(StringFromList(i, checkBoxList, ";"), checked)	EndFor	If(Checked == 1)		MasterARGhostFunc(checkBoxList,"")		MasterARGhostFunc("SetpointSetVar_0;","")		PDS("ARUserCallbackImageGo","MAPStartSetPointIncrement()")		PDS("ARUserCallbackImageDone","MAPStopSetPointIncrement()")		PDS("ARUserCallbackImageScan","MAPResetSetPoint()")			Else		MasterARGhostFunc("",checkBoxList)		MasterARGhostFunc("","SetpointSetVar_0;")		PDS("ARUserCallbackImageGo","")		PDS("ARUserCallbackImageDone","")		PDS("ARUserCallbackImageScan","")	EndIfEndFunction InitMAPSetPointIncrementPanel()		//	Used by the UserPanels machinery to set up data structures	If(!Exists(MAPVW))		Duplicate /O root:packages:MFP3D:Main:Variables:UserVariablesWave $MAPVW		DeletePoints /M=0 0, dimsize($MAPVW,0)-1, $MAPVW				Duplicate /O root:packages:MFP3D:Main:Variables:UserVariablesDescription $MAPDW		DeletePoints /M=0 0, dimsize($MAPDW,0)-1, $MAPDW							SetDimLabel 0,0,MAPDummyVar,$MAPVW, $MAPDW	EndIf	If(FindDimLabel($MAPVW, 0, "MAPFinalSetPt") == -2)		InsertPoints /M=0 0, 1, $MAPVW, $MAPDW		SetDimLabel 0,0,MAPFinalSetPt, $MAPVW, $MAPDW		PUS("MAPFinalSetPt","V")	// units		PTS("MAPFinalSetPt","Final Set Point")	// description		PPS("MAPFinalSetPt","MAPSetPointIncrementPanel")	// panels		PFS("MAPFinalSetPt","%.3W1P")	// format string		PVU("MAPFinalSetPt",0.001)	// units		PVL("MAPFinalSetPt",-9.5)	// low limit		PVH("MAPFinalSetPt",9.5)	// high limit		PVS("MAPFinalSetPt",0.005)	// step size		PVMU("MAPFinalSetPt",0.001)	// min units	EndIf		If(!Exists(pkgdir + ":MAPFinalSetPoint"))		Variable /G $(pkgdir + ":MAPFinalSetPoint") = 0	EndIf	EndFunction MAPStartSetPointIncrement()	//	Sets up a timer that calls the increment function at a rate of once per line.	//	Continues to operate as long as the increment function returns 0.		Variable Mode = GV("ImagingMode")	If (! (Mode == 0 || Mode == 1 || Mode == 3) )		DoAlert 0, "Set point increment is not supported in this imaging mode."		return -1	EndIf		Variable increment	// set point increment	Variable dt	// time between increments in ms		If ( GV("NapMode") > 0 )		dt = 2000 / GV("ScanRate")	Else		dt = 1000 / GV("ScanRate")	EndIf		increment = (GV("MAPFinalSetPt") - td_rv("$HeightLoop.SetPoint")) / ( GV("ScanLines") - 1)		aru_Background(kTimer, "MAPIncrementSetPoint", dt, num2str(increment))	EndFunction MAPResetSetPoint()	//	Restore the original set point.	//	Does nothing if the ImagingMode is not supported.	Switch ( GV("ImagingMode"))		case 0:	//	Contact		case 3:	//	PFM			td_wv("$HeightLoop.SetPoint", GV("DeflectionSetPointVolts") )			break		case 1:	// AC mode			td_wv("$HeightLoop.SetPoint", GV("AmplitudeSetPointVolts") )			break	EndSwitchEndFunction MAPStopSetPointIncrement()	//	Explicitly stops the timer that calls the set point increment function.	//	Probably not necessary, because the timer should stop calling the first time	//	it sees a -1 return, which happens if the HeightLoop is not running.	aru_Background(kTimer, "", -1, "")EndFunction MAPIncrementSetPoint(increment)	//	If HeightLoop is running, increments the set point by delta and returns 0.	//	If no HeightLoop running, returns -1 to stop the timer callback.	Variable increment		Variable OldValue = td_rv("$HeightLoop.Setpoint")		If( IsNaN(OldValue) )	// No heightloop running		return -1	Else		td_wv("$HeightLoop.Setpoint", OldValue + increment)		UpdateLog("SetPoint", OldValue + increment)		return 0	EndIf	EndWindow MAPSetPointIncrementPanel() : Panel	PauseUpdate; Silent 1		// building window...	NewPanel /K=1 /W=(968,357,1296,738)	SetDrawLayer ProgBack	SetDrawEnv linethick= 3,linefgc= (30464,30464,30464),fillpat= 0	DrawRect 3,3,325,378	SetDrawLayer UserBack	DrawText 16,24,"This panel exploits user callbacks - once the 'enable'"	DrawText 16,40,"box is checked, it will override any other user callbacks."	DrawText 16,71,"First, set the initial and final set points."	DrawText 16,148,"Second, enable the user callbacks with this check box."	DrawText 16,239,"Finally, start a scan."	SetDrawEnv fillpat= 0	DrawRect 8,52,320,123	SetDrawEnv fillpat= 0	DrawRect 8,128,320,216	SetDrawEnv fillpat= 0	DrawRect 8,222,320,273	DrawText 16,291,"The callbacks should update the set point once per"	DrawText 16,307,"scanline. It may take a line or two to begin, so changes"	DrawText 16,323,"are logged with value and line number in the wave note."	DrawText 16,193,"This disables the Set Point control so only one thing"	DrawText 16,209,"can change it at a time: either you or the code."	Button UserPanelRenameButton_0,pos={40,346},size={80,20},proc=ARUserPanelButtonFunc,title="Rename"	Button UserPanelRenameButton_0,font="Arial",fColor=(61440,61440,61440)	Button UserPanelSaveButton_0,pos={140,346},size={80,20},proc=ARUserPanelButtonFunc,title="Save"	Button UserPanelSaveButton_0,userdata= A":gnHZ3^Yr.F(KB53^Ih4CisSU6uQRXD.RU,F#lU.H#.V?;Iso\\@<,jk3`U64E_p1^AScEK4%W7<:18!N3__n:?W1NX:iC&cF@g@[Eb0*!DKJ]`DImW:BlIZG87?[Q;dji\\A3)D+"	Button UserPanelSaveButton_0,font="Arial",fColor=(61440,61440,61440)	PopupMenu UserPanelColorPop_0,pos={220,346},size={83,22},proc=ARUserPanelPopFunc,title="Color"	PopupMenu UserPanelColorPop_0,userdata= A"5i'3Uz5i'3Uz5i'3Uz",font="Arial"	PopupMenu UserPanelColorPop_0,fSize=12	PopupMenu UserPanelColorPop_0,mode=0,popColor= (30464,30464,30464),value= #"\"*COLORPOP*\""	SetVariable SetpointSetVar_0,pos={61,73},size={213,18},bodyWidth=130,proc=FMapSetVarFunc,title="Initial set point"	SetVariable SetpointSetVar_0,font="Arial",fSize=12,format="%.3f V"	SetVariable SetpointSetVar_0,limits={-inf,inf,0.1},value= root:packages:MFP3D:Main:Variables:MasterVariablesWave[%DeflectionSetpointVolts][%Value]	SetVariable MAPFinalSetPtSetVar_1,pos={61,98},size={213,18},bodyWidth=130,proc=MAPSetVarFunc,title="Final Set Point"	SetVariable MAPFinalSetPtSetVar_1,font="Arial",fSize=12,format="%.3W1PV"	SetVariable MAPFinalSetPtSetVar_1,limits={-inf,inf,0.1},value= root:packages:MFP3D:Main:Variables:MAPVariablesWave[%MAPFinalSetPt][%Value]	CheckBox EnableSetPointIncrement,pos={96,156},size={143,14},proc=MAPEnableSetPointIncrement,title="Enable set point increment"	CheckBox EnableSetPointIncrement,value= 0	Button DoScan_0,pos={96,244},size={80,20},proc=DoScanFunc,title="Do Scan"	Button DoScan_0,font="Arial",fColor=(61440,61440,61440)	SetWindow kwTopWin,hook(AR)=UserCnTPanelHookEndMacro